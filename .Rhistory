View(result3)
submit()
submit()
submit()
submit()
library(tidyr)
student
students
?gather
gather(students, sex, count, -grade)
students2
res <- students2 %>% gather(sex_class, count, -grade)
res <- gathers(students2, sex_class, count, -grade)
res <- gather(students2, sex_class, count, -grade)
print(res)
?separate
separate(res, sex_class, into=c("sex","class"))
submit()
print(students3)
submit()
?gather
submit()
gather(class1:class5, grade, na.rm= TRUE) %>%
[rint
submit()
submit()
submit()
submit()
submit()
submit()
submit()
?spread
submit()
extract_numeric("class5")
submit()
?mutate
submit()
submit()
submit()
?extract_numeric
submit()
extract_numeric(class)
class
extract_numeric(res$class)
res$class
res2 <- students3 %>% gather(class,grade, class1:class5, na.rm=TRUE)
extract_numeric(res2$class)
res2 %>% spread(test, grade) %>% mutate(class = extract_numeric(class))
res3 <- res2 %>% spread(test, grade) %>% mutate(class = extract_numeric(class))
class(res3$class)
submit()
submit()
reset()
submit()
submit()
submit()
submit()
students4
submit()
submit()
submit
submit()
passed
filed
failed
passed <- mutate(passed, status = "passed")
failed <- mutate(failed, status = "failed")
?bind_rows()
bind_rows(passed, failed)
sat
submit()
submit()
submit()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package = lubridate)
this_day <- today()
this_day
year(this_day); month(this_day); day(this_day)
wday(this_day)
wday(this_day, label = TRUE)
this_moment <- now()
this_moment
minute(this_moment)
my_date <- ymd("1989-05-17")
my_date <- ymd(this_day)
ymd("1989-05-17")
?ymd
ymd("1989-05-17", locale = Sys.getlocale("LC_TIME"))
my_date <- ymd("19890517")
my_date <- ymd(19890517)
?ymd
my_date <- ymd("89-05-17")
quit()
exit
exit()
?
;
reset()
bye
bye()
quit()
library(dplyr)
activity <- tbl_df(read.csv("activity.csv", colClasses=c("numeric","Date","numeric")))
setwd("D:/Johns Hopkins Data Science Specialization Courses/04. Reproducible Research/RepData_PeerAssessment1")
activity <- tbl_df(read.csv("activity.csv", colClasses=c("numeric","Date","numeric")))
stepsPerDay <- activity %>%
filter(!is.na(steps)) %>%
group_by(date) %>%
summarise(steps = sum(steps))
library(ggplot2)
ggplot(stepsPerDay, aes(x=steps)) + geom_histogram(binwidth=1000)
round(mean(stepsPerDay$steps))
median(stepsPerDay$steps)
stepsIntv <- activity %>%
group_by(interval) %>%
summarise(steps = mean(steps, na.rm=TRUE))
qplot(interval, steps, data=stepsIntv, geom="line")
stepsIntv %>%
filter(steps == max(steps)) %>%
select(interval)
sum(is.na(activity$steps))
sum(is.na(activity$date))
sum(is.na(activity$interval))
naStepsByDay <-
with(activity,
data.frame(
date=unique(date),
naSteps= as.numeric(tapply(is.na(steps), date, mean))
)
)
table(naStepsByDay$naSteps)
stepIntvMat <- filter(activity, date %in% naStepsByDay[naStepsByDay$naSteps == 0,1])
dates <- unique(stepIntvMat$date)
for (i in 2:length(dates)){
stepIntvMat <- cbind(stepIntvMat, filter(activity, date == dates[i]))
}
corDStep <- cor(stepIntvMat)
str(stepIntvMat)
for (i in 2:length(dates)){
stepIntvMat <- cbind(stepIntvMat, activity$steps[activity$date == dates[i],]))
}
stepIntvMat <- filter(activity, date %in% naStepsByDay[naStepsByDay$naSteps == 0,1])
stepIntvMat
stepIntvMat <- activity %>%
filter(date %in% naStepsByDay[naStepsByDay$naSteps == 0,1]) %>%
select(steps)
stepIntvMat
dates <- unique(stepIntvMat$date)
for (i in 2:length(dates)){
stepIntvMat <- cbind(stepIntvMat, activity$steps[activity$date == dates[i],])
}
for (i in 2:length(dates)){
stepIntvMat <- cbind(stepIntvMat, activity[activity$date == dates[i],]$steps)
}
stepIntvMat <- activity[activity$date == dates[1],]$steps
stepIntvMat
naStepsByDay
dates <- with(naStepsByDay, [naSteps == 0,]$date)
dates <- naStepsByDay[nsStepsByDay$naSteps == 0,]$date
dates <- naStepsByDay[naStepsByDay$naSteps == 0,]$date
dates
stepIntvMat <- activity[activity$date == dates[1],]$steps
for (i in 2:length(dates)){
stepIntvMat <- cbind(stepIntvMat, activity[activity$date == dates[i],]$steps)
}
stepIntvMat
str(stepIntvMat)
attr(stepIntvMat,"dimnames")
class(stepIntvMat)
attr(stepIntvMat, "dimnames")[1]
attr(stepIntvMat, "dimnames")[2]
stepIntvMat <- activity[activity$date == dates[1],]$steps
stepIntvMat
str(stepIntvMat)
attr(stepIntvMat,"dimnames")
for (i in 2:length(dates)){
stepIntvMat <- cbind(stepIntvMat, activity[activity$date == dates[i],]$steps)
}
attr(stepIntvMat,"dimnames")
matrix()
?matrix
dimnames(stepIntvMat)
dimnames(stepIntvMat) <- NULL
dimnames(stepIntvMat)
dimnames(stepIntvMat) <- list(seq(0,1440,5),dates)
dimnames(stepIntvMat)
corDStep <- cor(stepIntvMat)
class(corDStep)
hclustDStep <- hclust(corDStep)
corDStep
str(corDStep)
corDStep[2,2]
corDStep[1:2,1:2]
?cor
symnum(corDStep)
?lower
?triangular
?diagonal
?dig
?diag
lower.tri(stepIntMat)
lower.tri(stepIntvMat)
lower.tri(stepIntvMat)*stepIntvMat
hclustDStep <- hclust(corDStep*lower.tri(corDStep))
corDStep*lower.tri(corDStep)
hclustDStep <- hclust(corDStep*lower.tri(corDStep, diag=TRUE))
?dist
dist(stepIntvMat)
?cor
distDStep <- dist(stepIntvMat)
(hclustDStep <- hclust(distDStep))
plot(hclustDStep)
?scale
hclustDStep <- hclust(scale(distDStep))
distDStep <- dist(scale(stepIntvMat))
hclustDStep <- hclust(distDStep)
plot(hclustDStep)
distDStep
distDStep <- dist(scale(t(stepIntvMat)))
hclustDStep <- hclust(distDStep)
plot(hclustDStep)
dim(dates)
str(dates)
?kmeans
corDStep
kmeans(corDStep, centers = 7)
kmDStep <- kmeans(corDStep, centers = 7, iter.max=1000)
plot(kmDStep)
kmDStep <- kmeans(corDStep, centers = 7, iter.max=1000, nstart=1000)
kmDStep
str(kmDStep)
plot(kmDStep$centers)
kclustDStep <- kmeans(stepIntvMat, centers = 7)
kclustDStep$centers
kclustDStep <- kmeans(t(stepIntvMat), centers = 7)
kclustDStep
plot(kclustDStep$centers, type="l")
plot(kclustDStep$centers[1,], type="l")
plot(kclustDStep$centers[2,], type="l")
plot(kclustDStep$centers[3,], type="l")
plot(kclustDStep$centers[4,], type="l")
plot(kclustDStep$centers[5,], type="l")
plot(kclustDStep$centers[6,], type="l")
plot(kclustDStep$centers[7,], type="l")
plot(hclustDStep)
?hclust
kclustDStep <- kmeans(t(stepIntvMat), centers = 2, nstart=1000)
plot(kclustDStep$centers[1,], type="l")
plot(kclustDStep$centers[2,], type="l")
plot(kclustDStep$centers[3,], type="l")
plot(kclustDStep$centers[1,], type="l")
plot(kclustDStep$centers[2,], type="l")
kclustDStep
str(kclustDStep)
kclustDStep$cluster
kclustDStep <- kmeans(t(stepIntvMat), centers = 2, nstart=1000, iter.max=1000)
?kmeans
plot(hclustDStep)
?knn
??knn
kclustDStep2 <- kmeans(t(stepIntvMat), centers = 2, nstart=1000, iter.max=1000)
kclustDStep3 <- kmeans(t(stepIntvMat), centers = 3, nstart=1000, iter.max=1000)
kclustDStep4 <- kmeans(t(stepIntvMat), centers = 4, nstart=1000, iter.max=1000)
kclustDStep5 <- kmeans(t(stepIntvMat), centers = 5, nstart=1000, iter.max=1000)
kclustDStep6 <- kmeans(t(stepIntvMat), centers = 6, nstart=1000, iter.max=1000)
kclustDStep7 <- kmeans(t(stepIntvMat), centers = 7, nstart=1000, iter.max=1000)
cor(kclustDStep2$centers)
kclustDStep2$centers
cor(t(kclustDStep2$centers))
cor(t(kclustDStep3$centers))
cor(t(kclustDStep4$centers))
cor(t(kclustDStep5$centers))
cor(t(kclustDStep6$centers))
cor(t(kclustDStep7$centers))
cor(t(kclustDStep4$centers))
cor(t(kclustDStep2$centers))
cor(t(kclustDStep4$centers))
cor(t(kclustDStep5$centers))
hclustDStep$order
plot(hclustDStep[hclustDStep,])
plot(hclustDStep[hclustDStep$order,])
svdDStep <- svd(scale(stepIntvMat))
svdDStep
which.max(svdDStep$d)
svdDStep$d
plot(svdDStep$d)
?scale
svdDStep <- svd(stepIntvMat)
plot(svdDStep$d)
plot(svdDStep$d / sum(svdDStep$d))
?accumulate
??accumulate
??cumulative
?plot
??cumulative
Ecdf(svdDStep$d / sum(svdDStep$d))
Hmisc::Ecdf(svdDStep$d / sum(svdDStep$d))
?Hmisc::Ecdf
Hmisc::Ecdf(svdDStep$d / sum(svdDStep$d), xlab=1:53)
Hmisc::Ecdf(svdDStep$d / sum(svdDStep$d))
?cumsum
cumsum(1:10)
Ecdf(cumsum(svdDStep$d) / sum(svdDStep$d), ylab = "prop.")
plot(cumsum(svdDStep$d) / sum(svdDStep$d), ylab = "prop.")
?abline
abline(,0.8)
abline(1:53,0.8)
plot(cumsum(svdDStep$d) / sum(svdDStep$d), ylab = "prop.")
abline(0,0.8)
abline(0.8,0.8)
abline(a=0, b=0.8)
abline(a=0.8, b=0)
svdDStep$r[,1] %*% svdDStep$v[,1] * svdDStep$d[1]
svdDStep$r[,1] %*% svdDStep$v[,1]
svdDStep$u[,1] %*% svdDStep$v[,1] * svdDStep$d[1]
svdDStep$u[,1] %*% svdDStep$v[,1]
svdDStep$u[,1] %*% t(svdDStep$v[,1]) * svdDStep$d[1]
plot(svdDStep$u[,1] %*% t(svdDStep$v[,1]) * svdDStep$d[1])
plot(1:288, svdDStep$u[,1] %*% t(svdDStep$v[,1]) * svdDStep$d[1])
plot(1:53, svdDStep$u[,1] %*% t(svdDStep$v[,1]) * svdDStep$d[1])
c1 <- svdDStep$u[,1] %*% t(svdDStep$v[,1]) * svdDStep$d[1])
c1 <- svdDStep$u[,1] %*% t(svdDStep$v[,1]) * svdDStep$d[1]
length(c1)
dim(c1)
dim(stepIntvMat)
dim(svdDStep$u)
dim(svdDStep$v)
head(svdDStep$v)
?svd
c1
image(c1)
dim(c1)
rowMean(c1)
rowMeans(c1)
plot(rowMeans(c1))
points(kclustDStep2$centers[2,], col=2)
points(kclustDStep2$centers[1,], col=3)
points(stepIntvMat[,3], pch=19, col=4)
pcplSteps <- rowMeans(svdDStep$u[,1] %*% t(svdDStep$v[,1]) * svdDStep$d[1])
points(pcplSteps, pch=20, col=7)
pcplSteps <- round(rowMeans(svdDStep$u[,1] %*% t(svdDStep$v[,1]) * svdDStep$d[1]))
plot(pcplSteps)
plot(pcplSteps, pch=20, col=2)
plot(pcplSteps, pch=20, col=7)
plot(pcplSteps, pch=20, col=2)
points(stepIntvMat[,1], pch=19, col=3)
points(stepIntvMat[,3], pch=19, col=3)
plot(pcplSteps, pch=20, col=2)
points(rowMeans(stepIntMat), pch=19, col=3)
points(rowMeans(stepIntvMat), pch=19, col=3)
points(rowMeans(stepIntvMat), pch=19, col=4)
?legend
legend("topright",legend=c("principal","avg."),col=c(2,4))
legend("topright",legend=c("principal","avg."),col=c(2,4), pch=19)
plot(pcplSteps, col=2)
points(rowMeans(stepIntvMat), col=4)
plot(pcplSteps, pch=19,col=2)
points(rowMeans(stepIntvMat), col=4)
legend("topright",legend=c("principal","avg."),col=c(2,4), pch=c(19,1))
plot(pcplSteps, pch=19,col=2, ylab="steps")
points(rowMeans(stepIntvMat), col=4)
legend("topright",legend=c("principal","avg."),col=c(2,4), pch=c(19,1))
ls()
ls("k")
ls("k*")
ls("^k")
ls(^k)
?ls
ls(pattern="^k")
rm(list=ls(pattern="^k"))
rm(c1, corDStep)
naStepsByDay
dates1 <- naStepsByDay[naStepsByDay$steps==1,]$date
dates1
str(naStepsByDay)
dates1 <- naStepsByDay[naStepsByDay$naSteps==1,]$date
dates1
newActivity <- activity
newActivity[newActivity$date %in% dates1,]$steps <- rep(pcplSteps,length(dates1))
?rep
newActivity
is.na(newActivity)
colSums(is.na(newActivity))
colSums(activity)
colSums(is.na(activity))
colSums(is.na(newActivity))
#total number of steps taken each day - new dataset
stepsPerDayNew <- newActivity %>%
group_by(date) %>%
summarise(steps = sum(steps))
#histogram
ggplot(stepsPerDayNew, aes(x=steps)) + geom_histogram(binwidth=1000)
#mean
round(mean(stepsPerDayNew$steps))
#median
median(stepsPerDayNew$steps))
median(stepsPerDayNew$steps)
ggplot(stepsPerDayNew, aes(x=steps)) + geom_histogram(binwidth=1000)
+ facet(c(1,2))
+ ggplot(stepsPerDay, aes(x=steps)) + geom_histogram(binwidth=1000)
?facet
?ggplot2
?ggplot
?hist
hist(stepsPerDayNew$steps, break=1000)
hist(stepsPerDayNew$steps, breaks=1000)
ggplot(stepsPerDayNew, aes(x=steps)) + geom_histogram(binwidth=1000)
hist(stepsPerDayNew$steps, breaks=1000)
?hist
hist(stepsPerDayNew$steps)
hist(stepsPerDayNew$steps, n=1000)
hist(stepsPerDayNew$steps, n=10)
range(stepsPerDayNew$steps)
range(stepsPerDayNew$steps)/1000
round(range(stepsPerDayNew$steps)/1000)
round(max(stepsPerDayNew$steps)/1000)
hist(stepsPerDayNew$steps, n=round(max(stepsPerDayNew$steps)/1000))
par(mfrow=c(1,2))
hist(stepsPerDayNew$steps, n=round(max(stepsPerDayNew$steps)/1000), xlab="steps", title = "Imput")
par(mfrow=c(1,2))
hist(stepsPerDayNew$steps, n=round(max(stepsPerDayNew$steps)/1000), xlab="steps",main = "Imput")
hist(stepsPerDay$steps, n=round(max(stepsPerDay$steps)/1000), xlab="steps", main = "Missing")
hist(stepsPerDayNew$steps, n=round(max(stepsPerDayNew$steps)/1000), xlab="steps",main = "Imput", ylim = 16)
?hist
hist(stepsPerDayNew$steps, n=round(max(stepsPerDayNew$steps)/1000), xlab="steps",main = "Imput", ylim = c(0,16))
hist(stepsPerDay$steps, n=round(max(stepsPerDay$steps)/1000), xlab="steps", main = "Missing")
par(mfrow=c(1,2))
hist(stepsPerDayNew$steps, n=round(max(stepsPerDayNew$steps)/1000), xlab="steps",main = "Imput", ylim = c(0,16))
hist(stepsPerDay$steps, n=round(max(stepsPerDay$steps)/1000), xlab="steps", main = "Missing")
hist(stepsPerDayNew$steps, n=round(max(stepsPerDayNew$steps)/1000), xlab="steps",main = "Imput", ylim = c(0,14))
hist(stepsPerDay$steps, n=round(max(stepsPerDay$steps)/1000), xlab="steps", main = "Missing", ylim = c(0,14))
?axis
round(mean(stepsPerDayNew$steps))-round(mean(stepsPerDay$steps))
median(stepsPerDayNew$steps)-median(stepsPerDay$steps)
weekday(dates)
??weekday
weekdays(dates)
weekdays(newActivity$date)
levels(weekdays(newActivity$date))
unique(weekdays(newActivity$date))
as.numeric(unique(weekdays(newActivity$date)))
as.Date(unique(weekdays(newActivity$date)),"%d")
unique(weekdays(newActivity$date)) < "Friday"
?weekend
??weekend
is.weekend(unique(weekdays(newActivity$date)))
is.weekend(unique(newActivity$date))
?weekdays
class(unique(weekdays(newActivity$date)))
class(unique(weekdays(newActivity$date, TRUE)))
unique(weekdays(newActivity$date, TRUE))
unique(julian(newActivity$date, TRUE))
unique(format(newActivity$date, "%u"))
class(unique(format(newActivity$date, "%u")))
as.numeric(unique(format(newActivity$date, "%u")))
?factor
ex<-factor(c("weekday","weekend"))
ex
ex <- rep(ex, 10)
ex
dayInd <- (as.numeric(format(newActivity$date, "%u"))<6)
sum(datInd)
sum(dayInd)
sum(!dayInd)
dayInd <- factor(c("weekend","weekday"))
dayInd
?level
?levels
dayInd <- (as.numeric(format(newActivity$date, "%u"))<6)
levels(dayInd)
levels(factor(dayInd))
dayInd <- factor(as.numeric(format(newActivity$date, "%u"))<6)
levels(dayInd) <- c("weekend","weekday")
levels(dayInd)
dayInd
str(dayInd)
newActivity$day <- dayInd
head(newActivity)
library(latticeplot)
?latticeplot
?lattice
library(lattice)
stepsByWeekday <- newActivity %>%
group_by(interval, day) %>%
summarise(steps=mean(steps))
stepsByWeekday
xyplot(steps ~ interval | day)
xyplot(steps ~ interval | day, data=stepsByWeekday)
xyplot(steps ~ interval | day, data=stepsByWeekday, type="l")
xyplot(steps ~ interval | day, data=stepsByWeekday, type="l", xlab="Interval", ylab="Number of Steps", panel = c(2,1))
xyplot(steps ~ interval | day, data=stepsByWeekday, type="l", xlab="Interval", ylab="Number of Steps", panel = c(2,1))
xyplot(steps ~ interval | day, data=stepsByWeekday, type="l", xlab="Interval", ylab="Number of Steps")
xyplot(steps ~ interval | day, data=stepsByWeekday, type="l", xlab="Interval", ylab="Number of Steps", layout=c(1,2))
xyplot(steps ~ interval | day, data=stepsByWeekday, type="l", xlab="Interval", ylab="Number of Steps", layout=c(2,1))
xyplot(steps ~ interval | day, data=stepsByWeekday, type="l", xlab="Interval", ylab="Number of Steps", layout=c(-2,1))
xyplot(steps ~ interval | day, data=stepsByWeekday, type="l", xlab="Interval", ylab="Number of Steps", layout=c(1,2))
xyplot(steps ~ interval | day, data=stepsByWeekday, type="l", xlab="Interval", ylab="Number of Steps")#, layout=c(1,2))
xyplot(Sepal.Length + Sepal.Width ~ Petal.Length + Petal.Width | Species,
data = iris, scales = "free", layout = c(2, 2),
auto.key = list(x = .6, y = .7, corner = c(0, 0)))
xyplot(Sepal.Length + Sepal.Width ~ Petal.Length + Petal.Width | Species,
data = iris, scales = "free", layout = c(2, 2))
xyplot(steps ~ interval | day, data=stepsByWeekday, type="l", xlab="Interval", ylab="Number of Steps", layout=c(1,2))
par(mfrow=c(1,2))
hist(stepsPerDayNew$steps, n=round(max(stepsPerDayNew$steps)/1000), xlab="steps",main = "Imput", ylim = c(0,14))
abline(8,8)
abline(8,0)
abline(8,0, lty = 2)
hist(stepsPerDayNew$steps, n=round(max(stepsPerDayNew$steps)/1000), xlab="steps",main = "Imput", ylim = c(0,14))
abline(8,0, lty = 2)
abline(8,0, lty = 2, col=2)
